//üîπ constructor() ‡¶π‡¶≤ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ method, ‡¶Ø‡ßá‡¶ü‡¶æ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶∏‡ßç‡¶¨‡ßü‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶≤ ‡¶π‡ßü‡•§
//this ‡¶π‡¶≤ ‡¶è‡¶ï‡¶ü‡¶ø keyword, ‡¶Ø‡¶æ function ‡¶¨‡¶æ object-‡¶è‡¶∞ context ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶®‡¶ø‡¶ú‡ßá‡¶ï‡ßá ‡¶¨‡ßã‡¶ù‡¶æ‡ßü‡•§
// ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé, ‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶õ‡ßá, ‡¶§‡¶æ‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞ ‡¶ï‡¶∞‡ßá this ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶®‡•§
// üîπ ‡¶è‡¶§‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø object ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü property/‡¶Æ‡¶æ‡¶® ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§
class person {
  constructor(name, age) {
    this.name = name;
    this.age = age;
  }

  sleep() {
    console.log(`sleeping now ${this.name}`);
  }
  activitity() {
    this.sleep();
  }
}
const codom = new person("codom ali", 58);
console.log(codom);
codom.sleep();
const badam = new person("kacha badam");
badam.sleep();

//bejal
const lezy = codom.sleep;
lazy();
